{"version":3,"sources":["context/RecipesContext.js","config.js","services/token-service.js","components/Nav/Nav.js","routes/Landing/Landing.js","components/Footer/Footer.js","components/RecipeItem/RecipeItem.js","services/recipes-api-service.js","routes/RecipeList/RecipeList.js","routes/RecipeDetail/RecipeDetail.js","components/IngredientInput/IngredientInput.js","routes/CreateRecipe/CreateRecipe.js","routes/UpdateRecipe/UpdateRecipe.js","services/auth-api-service.js","routes/SignIn/SignIn.js","routes/SignUp/SignUp.js","index.js","components/App/App.js"],"names":["RecipesContext","React","createContext","recipes","currentUser","recipeDetails","ingredients","setError","clearError","signIn","signOut","createRecipe","addRecipe","deleteRecipe","setRecipeList","setRecipeDetails","updateRecipe","updateIngredients","RecipesProvider","state","recipe","id","user_name","title","description","instructions","ingredient_name","quantity","measurement","error","setRecipesList","setState","console","log","handleSignIn","handleSignUp","handleSignOut","handleDeleteRecipe","recipe_id","filter","item","parseInt","handleSetRecipeDetails","value","this","signUp","handleCreateRecipe","Provider","props","children","Component","TokenService","saveAuthToken","token","window","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","Nav","onSignOut","e","preventDefault","context","history","push","className","to","onClick","defaultProps","contextType","OnlyTastefulContext","Landing","Footer","RecipeItem","data","recipe_description","slice","user_id","users","RecipesApiService","getRecipes","fetch","headers","then","res","ok","json","err","Promise","reject","getRecipeDetails","postRecipe","newRecipe","method","body","JSON","stringify","updatedRecipe","RecipeList","catch","map","idx","key","RecipeDetail","recipeId","match","params","ingredient","split","type","RecipeContext","IngredientInput","onChange","handleChange","target","htmlFor","name","defaultValue","arrLength","measurement_name","CreateRecipe","touched","values","ingredientValues","onCreateRecipe","addIngredient","removeIngredients","index","role","onSubmit","updateTitle","updateDescription","updateInstructions","length","UpdateRecipe","onUpdateRecipe","that","setTimeout","AuthApiService","postLogin","postUser","user","SignIn","onSignIn","authToken","SignUp","onSignUp","full_name","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.7df6502d.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst RecipesContext = React.createContext({\n  recipes: [],\n  currentUser: null,\n  recipeDetails: {},\n  ingredients: [],\n  setError: () => { },\n  clearError: () => { },\n  signIn: () => { },\n  signOut: () => { },\n  createRecipe: () => { },\n  addRecipe: () => { },\n  deleteRecipe: () => { },\n  setRecipeList: () => { },\n  setRecipeDetails: () => { },\n  updateRecipe: () => { },\n  updateIngredients: () => { },\n})\n\nexport default RecipesContext\n\nexport class RecipesProvider extends Component {\n  state = {\n    recipes: [],\n    currentUser: false,\n    recipeDetails: {\n      recipe: {\n        id: 1,\n        user_name: '',\n        title: '',\n        description: '',\n        instructions: ''\n      },\n      ingredients: [\n        {\n          ingredient_name: '',\n          quantity: 1,\n          measurement: '',\n        }\n      ],\n    },\n    error: null,\n  }\n\n  setRecipesList = recipes => {\n    this.setState({ recipes })\n  }\n\n  setError = error => {\n    console.log(error)\n    this.setState({ error })\n  }\n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n\n  handleSignIn = (user_name) => {\n    this.setState({\n      currentUser: user_name,\n    })\n  }\n\n  handleSignUp = (user_name) => {\n    this.setState({\n      currentUser: user_name,\n    })\n  }\n\n  handleSignOut = () => {\n    this.setState({\n      currentUser: null,\n    })\n  }\n\n  handleDeleteRecipe = (recipe_id) => {\n    // A little hack to get state to update properly\n    // eslint-disable-next-line\n    let x = '';\n    this.setState({\n      recipes: this.state.recipes.filter(item => item.id !== parseInt(recipe_id))\n    })\n  }\n\n  handleSetRecipeDetails = (recipe, ingredients) => {\n    this.setState({\n      recipeDetails: {\n        recipe: recipe,\n        ingredients: ingredients\n      }\n    })\n  }\n\n  render() {\n    const value = {\n      recipes: this.state.recipes,\n      setRecipesList: this.setRecipesList,\n      currentUser: this.state.currentUser,\n      recipeDetails: this.state.recipeDetails,\n      signIn: this.handleSignIn,\n      signUp: this.handleSignUp,\n      signOut: this.handleSignOut,\n      addRecipe: this.handleCreateRecipe,\n      deleteRecipe: this.handleDeleteRecipe,\n      setRecipeDetails: this.handleSetRecipeDetails,\n      setError: this.setError,\n      clearError: this.clearError\n    }\n    return (\n      <RecipesContext.Provider value={value}>\n        {this.props.children}\n      </RecipesContext.Provider>\n    )\n  }\n}","export default {\n  API_ENDPOINT: 'https://only-tasteful-api.herokuapp.com/api' /*'http://localhost:8000/api'*/,\n  TOKEN_KEY: 'only-tasteful-client-auth-token',\n}","import config from '../config';\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`)\n  },\n}\n\nexport default TokenService;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport OnlyTastefulContext from '../../context/RecipesContext';\nimport TokenService from '../../services/token-service';\nimport './Nav.css';\n\n\nexport default class Nav extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n\n  static contextType = OnlyTastefulContext;\n\n  onSignOut = (e) => {\n    e.preventDefault()\n    TokenService.clearAuthToken()\n    this.context.signOut()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { currentUser } = this.context;\n    return (\n      <nav>\n        <p><Link className='appName' to='/'>OnlyTasteful</Link></p>\n        <ul>\n          <li><Link className='navItem' to='/recipes'>Recipes</Link></li>\n          {\n            currentUser ?\n              <>\n                <li><Link className='navItem' to='/createrecipe'>Create Recipe</Link></li>\n                <li><Link className='navItem' to='/' onClick={this.onSignOut}>Sign Out</Link></li>\n              </> : <>\n                <li><Link className='navItem' to='/signin'>Sign In</Link></li>\n                <li><Link className='navItem' to='/signup'>Sign Up</Link></li>\n              </>\n          }\n        </ul>\n      </nav>\n    )\n  }\n}","import React from 'react';\nimport './Landing.css';\nimport { Link } from 'react-router-dom';\n\nexport default function Landing() {\n  return (\n    <main>\n      <section className=\"hero\">\n        <h1>OnlyTasteful</h1>\n        <h2>A cookbook for the modern cook</h2>\n      </section>\n      <section className=\"findYourDish\">\n        <Link to='/recipes' className='hoverEffect'>\n          <h3>Find your next dish to cook</h3>\n          <p>\n            [<em>Placeholder for screenshot of view all recipes</em>] OnlyTasteful is the digital\n          equivalent of grandma's cookbook.\n        </p>\n        </Link>\n      </section>\n      <section className=\"createRecipes\">\n        <Link to='/signin' className='hoverEffect'>\n          <h3>Create and modify your own recipes</h3>\n          <p>\n            [<em>Placeholder for gif of create/modify interface</em>]\n          Add or modify your recipes to build a library of delicious meals.\n        </p>\n        </Link>\n      </section>\n    </main>\n  )\n}","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>© Michael H Ploughman 2020</p>\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './RecipeItem.css';\n\nfunction RecipeItem(props) {\n  return (\n    <Link className='recipeItemContent' to={`/recipes/${props.data.id}`}>\n      <div className='recipeItem'>\n        <h4 className='recipeItemContent'>{props.data.title}</h4>\n        <p className='recipeItemContent'>Added by: {props.data.user_name}</p>\n        <p className='recipeItemContent'>{props.data.recipe_description.slice(0, 51) + '...'}</p>\n      </div>\n    </Link>\n  )\n}\n\nexport default RecipeItem\n\nRecipeItem.defaultProps = {\n  data: {\n    id: 1,\n    title: '',\n    user_id: 1,\n    recipe_description: '',\n  },\n  users: [\n    { id: 1 }\n  ]\n}","import config from '../config';\nimport TokenService from './token-service';\n\nconst RecipesApiService = {\n  getRecipes() {\n    return fetch(`${config.API_ENDPOINT}/recipes`, {\n      headers: {\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.json()\n      )\n  },\n  getRecipeDetails(recipe_id) {\n    return fetch(`${config.API_ENDPOINT}/recipes/${recipe_id}`, {\n      headers: {\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.json()\n      )\n  },\n  postRecipe(newRecipe) {\n    return fetch(`${config.API_ENDPOINT}/recipes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify({\n        title: newRecipe.title,\n        recipe_description: newRecipe.recipe_description,\n        instructions: newRecipe.instructions,\n        ingredients: newRecipe.ingredients\n      }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.json()\n      )\n  },\n  deleteRecipe(recipe_id) {\n    return fetch(`${config.API_ENDPOINT}/recipes/${recipe_id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.ok\n      )\n  },\n  updateRecipe(updatedRecipe, recipe_id) {\n    return fetch(`${config.API_ENDPOINT}/recipes/${recipe_id}`, {\n      method: 'PATCH',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`,\n      },\n      body: JSON.stringify({\n        title: updatedRecipe.title,\n        recipe_description: updatedRecipe.recipe_description,\n        instructions: updatedRecipe.instructions,\n        ingredients: updatedRecipe.ingredients\n      }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.ok\n      )\n  },\n}\n\nexport default RecipesApiService","import React, { Component } from 'react';\nimport RecipeItem from '../../components/RecipeItem/RecipeItem';\nimport RecipesContext from '../../context/RecipesContext';\nimport RecipesApiService from '../../services/recipes-api-service';\nimport './RecipeList.css';\n\nexport default class RecipeList extends Component {\n\n  componentDidMount() {\n    this.context.clearError()\n    RecipesApiService.getRecipes()\n      .then(res => this.context.setRecipesList(res))\n      .catch(this.context.setError)\n  }\n  \n  static contextType = RecipesContext;\n\n  render() {\n    const recipes = this.context.recipes.map((recipe, idx) =>\n      <RecipeItem key={idx} data={recipe} />\n    );\n    return (\n      <section className='recipeList'>\n        {recipes}\n      </section>\n    )\n  }\n}","import React, { Component } from 'react';\nimport RecipeContext from '../../context/RecipesContext';\nimport RecipesApiService from '../../services/recipes-api-service';\nimport './RecipeDetail.css';\n\nexport default class RecipeDetail extends Component {\n\n  componentDidMount() {\n    const { recipeId } = this.props.match.params;\n    RecipesApiService.getRecipeDetails(recipeId)\n      .then(res => {\n        this.context.setRecipeDetails(res.recipe, res.ingredients)\n      })\n      .catch(err => this.context.setError(err))\n  }\n\n  static contextType = RecipeContext;\n\n  static defaultProps = {\n    match: {\n      params: {}\n    },\n    history: {\n      push: () => { }\n    },\n    users: [\n      { id: 1 }\n    ]\n  }\n\n  updateRecipe = () => {\n    const { recipeId } = this.props.match.params;\n    this.props.history.push(`/recipes/${recipeId}/update`)\n  }\n\n  handleDeleteRecipe = () => {\n    const { recipeId } = this.props.match.params;\n    RecipesApiService.deleteRecipe(recipeId)\n      .then(res => { this.context.deleteRecipe(recipeId) })\n      .then(this.props.history.push('/recipes'))\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    const ingredients = this.context.recipeDetails.ingredients.map((ingredient, idx) =>\n      <li key={idx}>{ingredient.quantity} {ingredient.measurement} {ingredient.ingredient_name}</li>\n    )\n    const recipe = this.context.recipeDetails.recipe\n    return (\n      <main className='RecipeDetail'>\n        <header>\n          <h2>{recipe.title}</h2>\n          <p>Added by: {recipe.user_name}</p>\n        </header>\n        <section className=\"description\">\n          <p>\n            {recipe.recipe_description}\n          </p>\n        </section>\n        <section>\n          <h3>Ingredients List</h3>\n          <ul className='ingredients'>\n            {ingredients}\n          </ul>\n        </section>\n        <section>\n          <h3>Cooking Instructions</h3>\n          <div className='instructions'>\n            {recipe.instructions.split(/\\n \\r|\\n/).map((instructions, idx) => \n              <p key={idx}>{instructions}</p>\n            )}\n          </div>\n        </section>\n        {recipe.user_name === this.context.currentUser\n          ? <>\n            <button type='button' className='updateRecipe'\n              onClick={this.updateRecipe}>Update Recipe</button>\n            <button type='button' className='deleteRecipe'\n              onClick={this.handleDeleteRecipe}>Delete Recipe</button>\n          </>\n          : null\n        }\n      </main>\n    )\n  }\n}","import React from 'react';\nimport './IngredientInput.css';\n\nexport default function IngredientInput(props) {\n  return (\n    <div key={props.idx} className='IngredientInput' onChange={(e) => props.handleChange(e.target, props.idx)}>\n      <p>Ingredient {props.idx + 1}</p>\n      <label htmlFor={`ingredient${props.idx}`}>Ingredient Name</label>\n      <input type='text'\n        name={`ingredient_name${props.idx}`} id={`ingredient_name${props.idx}`}\n        onChange={(e) => props.handleChange(e.target, props.idx)} defaultValue={props.data.ingredient_name} />\n      <label htmlFor={`ingredient${props.idx}`}>Quantity</label>\n      <input type='text'\n        name={`ingredient_quantity${props.idx}`} id={`ingredient_quantity${props.idx}`}\n        onChange={(e) => props.handleChange(e.target, props.idx)} defaultValue={props.data.quantity} />\n      <label htmlFor={`ingredient${props.idx}`}>Measurement Unit</label>\n      <input type='text'\n        name={`measurement${props.idx}`} id={`measurement${props.idx}`} \n        onChange={(e) => props.handleChange(e.target, props.idx)} defaultValue={props.data.measurement} />\n      {props.arrLength > 1 ?\n        <button type=\"button\"\n          onClick={(e) => props.onClick(e)}\n        >Remove Ingredient</button>\n        : null}\n    </div>\n  )\n}\n\nIngredientInput.defaultProps = {\n  idx: 1,\n  data: {\n    name: '',\n    quantity: '',\n    measurement_name: '',\n  },\n}","import React, { Component } from 'react';\nimport OnlyTastefulContext from '../../context/RecipesContext';\nimport IngredientInput from '../../components/IngredientInput/IngredientInput';\nimport RecipesApiService from '../../services/recipes-api-service';\nimport './CreateRecipe.css';\n\nexport default class CreateRecipe extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n\n  state = {\n    title: {\n      value: '',\n      touched: false,\n    },\n    recipe_description: {\n      value: '',\n      touched: false,\n    },\n    ingredients: {\n      values: [\n        {\n          quantity: '',\n          measurement: '',\n          ingredient_name: '',\n        },\n      ],\n      touched: false,\n    },\n    instructions: {\n      value: '',\n      touched: false,\n    }\n  }\n\n  static contextType = OnlyTastefulContext;\n\n  updateTitle(value) {\n    this.setState({\n      title: {\n        value: value,\n        touched: true\n      }\n    })\n  }\n\n  updateDescription(value) {\n    this.setState({\n      recipe_description: {\n        value: value,\n        touched: true\n      }\n    })\n  }\n\n  updateIngredients = (target, idx) => {\n    const ingredientValues = this.state.ingredients.values;\n    if (target.id === `ingredient_name${idx}`) {\n      this.setState({\n        ingredients: {\n          values: [\n            ...ingredientValues.slice(0, idx),\n            {\n              ingredient_name: target.value,\n              measurement: ingredientValues[idx].measurement,\n              quantity: ingredientValues[idx].quantity,\n            },\n            ...ingredientValues.slice(idx + 1)\n          ],\n          touched: true\n        }\n      })\n    } else if (target.id === `measurement${idx}`) {\n      this.setState({\n        ingredients: {\n          values: [\n            ...ingredientValues.slice(0, idx),\n            {\n              ingredient_name: ingredientValues[idx].ingredient_name,\n              measurement: target.value,\n              quantity: ingredientValues[idx].quantity,\n            },\n            ...ingredientValues.slice(idx + 1)\n          ],\n          touched: true\n        }\n      })\n    } else if (target.id === `ingredient_quantity${idx}`) {\n      this.setState({\n        ingredients: {\n          values: [\n            ...ingredientValues.slice(0, idx),\n            {\n              ingredient_name: ingredientValues[idx].ingredient_name,\n              measurement: ingredientValues[idx].measurement,\n              quantity: target.value,\n            },\n            ...ingredientValues.slice(idx + 1)\n          ],\n          touched: true\n        }\n      })\n    }\n  }\n\n  updateInstructions(value) {\n    this.setState({\n      instructions: {\n        value: value,\n        touched: true\n      }\n    })\n  }\n\n  onCreateRecipe = (e) => {\n    e.preventDefault()\n    const newRecipe = {\n      title: this.state.title.value,\n      recipe_description: this.state.recipe_description.value,\n      ingredients: this.state.ingredients.values,\n      instructions: this.state.instructions.value,\n    }\n    RecipesApiService.postRecipe(newRecipe)\n      .then(res => this.props.history.push('/recipes'))\n      .catch()\n\n  }\n\n  addIngredient = (e) => {\n    e.preventDefault()\n    this.setState({\n      ingredients: {\n        values: [\n          ...this.state.ingredients.values,\n          {\n            quantity: '',\n            measurement: '',\n            ingredient_name: ''\n          },\n        ],\n      },\n    })\n  }\n\n  removeIngredients = (index) => {\n    const ingredients = this.state.ingredients.values\n    this.setState({\n      ingredients: {\n        values: [\n          ...ingredients.slice(0, index),\n          ...ingredients.slice(index + 1)\n        ]\n      }\n    })\n  }\n\n  render() {\n    return (\n      <main role=\"main\" className='createRecipe'>\n        <header>\n          <h2>Create Recipe</h2>\n        </header>\n        <section>\n          <form className='createRecipeForm' onSubmit={this.onCreateRecipe}>\n            <div className='flexContainer'>\n              <div className='leftColumn'>\n                <label htmlFor='recipe_title'>Title</label>\n                <input\n                  type='text' name='title' id='recipe_title'\n                  onChange={e => this.updateTitle(e.target.value)}\n                />\n                <label htmlFor='description'>Description</label>\n                <textarea\n                  name='recipe_description' id='recipe_description'\n                  onChange={e => this.updateDescription(e.target.value)}\n                />\n                <label htmlFor='instructions'>Cooking Directions</label>\n                <textarea\n                  id='instructions' name='instructions'\n                  onChange={e => this.updateInstructions(e.target.value)}\n                ></textarea>\n              </div>\n              <div className='rightColumn'>\n                {this.state.ingredients.values.map((ingredient, idx) =>\n                  <IngredientInput key={idx} idx={idx}\n                    data={ingredient} arrLength={this.state.ingredients.values.length}\n                    handleChange={this.updateIngredients} onClick={e => this.removeIngredients(idx)}\n                  />\n                )}\n                <button onClick={this.addIngredient}>+ Add another ingredient</button>\n              </div>\n            </div>\n            <input type='submit' />\n          </form>\n        </section>\n      </main>\n    )\n  }\n}","import React, { Component } from 'react';\nimport IngredientInput from '../../components/IngredientInput/IngredientInput';\nimport OnlyTastefulContext from '../../context/RecipesContext';\nimport RecipesApiService from '../../services/recipes-api-service';\nimport './UpdateRecipe.css';\n\nexport default class UpdateRecipe extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n    match: {\n      params: {},\n    },\n  }\n\n  state = {\n    recipe: {\n      title: {\n        value: '',\n        touched: false,\n      },\n      recipe_description: {\n        value: '',\n        touched: false,\n      },\n      instructions: {\n        value: '',\n        touched: false,\n      }\n    },\n    ingredients: {\n      values: [\n        {\n          quantity: '',\n          measurement: '',\n          ingredient_name: '',\n        },\n      ],\n      touched: false,\n    },\n  }\n\n  componentDidMount() {\n    const { recipeId } = this.props.match.params;\n    RecipesApiService.getRecipeDetails(recipeId)\n      .then(res => this.setState({\n        recipe: {\n          title: {\n            value: res.recipe.title,\n            touched: false,\n          },\n          recipe_description: {\n            value: res.recipe.recipe_description,\n            touched: false,\n          },\n          instructions: {\n            value: res.recipe.instructions,\n            touched: false,\n          },\n        },\n        ingredients: {\n          values: res.ingredients\n        }\n      }))\n      .catch(err => console.log(err))\n  }\n\n  static contextType = OnlyTastefulContext;\n\n  updateTitle(value) {\n    const recipe = this.state.recipe\n    this.setState({\n      recipe: {\n        title: {\n          value: value,\n          touched: true\n        },\n        recipe_description: recipe.recipe_description,\n        instructions: recipe.instructions\n      },\n    })\n  }\n\n  updateDescription(value) {\n    const recipe = this.state.recipe\n    this.setState({\n      recipe: {\n        title: recipe.title,\n        recipe_description: {\n          value: value,\n          touched: true\n        },\n        instructions: recipe.instructions,\n      },\n    })\n  }\n\n  updateInstructions(value) {\n    const recipe = this.state.recipe\n    this.setState({\n      recipe: {\n        title: recipe.title,\n        recipe_description: recipe.recipe_description,\n        instructions: {\n          value: value,\n          touched: true\n        },\n      },\n    })\n  }\n\n  updateIngredients = (target, idx) => {\n    const ingredientValues = this.state.ingredients.values;\n    if (target.id === `ingredient_name${idx}`) {\n      this.setState({\n        ingredients: {\n          values: [\n            ...ingredientValues.slice(0, idx),\n            {\n              ingredient_name: target.value,\n              measurement: ingredientValues[idx].measurement,\n              quantity: ingredientValues[idx].quantity,\n            },\n            ...ingredientValues.slice(idx + 1)\n          ],\n          touched: true\n        }\n      })\n    } else if (target.id === `measurement${idx}`) {\n      this.setState({\n        ingredients: {\n          values: [\n            ...ingredientValues.slice(0, idx),\n            {\n              ingredient_name: ingredientValues[idx].ingredient_name,\n              measurement: target.value,\n              quantity: ingredientValues[idx].quantity,\n            },\n            ...ingredientValues.slice(idx + 1)\n          ],\n          touched: true\n        }\n      })\n    } else if (target.id === `ingredient_quantity${idx}`) {\n      this.setState({\n        ingredients: {\n          values: [\n            ...ingredientValues.slice(0, idx),\n            {\n              ingredient_name: ingredientValues[idx].ingredient_name,\n              measurement: ingredientValues[idx].measurement,\n              quantity: target.value,\n            },\n            ...ingredientValues.slice(idx + 1)\n          ],\n          touched: true\n        }\n      })\n    }\n  }\n\n  addIngredient = (e) => {\n    e.preventDefault()\n    this.setState({\n      ingredients: {\n        values: [\n          ...this.state.ingredients.values,\n          {\n            quantity: '',\n            measurement: '',\n            ingredient_name: ''\n          },\n        ],\n      },\n    })\n  }\n\n  removeIngredients = (index) => {\n    const ingredients = this.state.ingredients.values\n    this.setState({\n      ingredients: {\n        values: [\n          ...ingredients.slice(0, index),\n          ...ingredients.slice(index + 1)\n        ]\n      }\n    })\n  }\n\n  onUpdateRecipe = (e) => {\n    e.preventDefault()\n    const { recipeId } = this.props.match.params;\n    const recipe = this.state.recipe\n    const updatedRecipe = {\n      title: recipe.title.value,\n      recipe_description: recipe.recipe_description.value,\n      instructions: recipe.instructions.value,\n      ingredients: this.state.ingredients.values,\n    }\n    RecipesApiService.updateRecipe(updatedRecipe, recipeId)\n      .then(this.context.setRecipeDetails(\n          {\n            title: updatedRecipe.title,\n            recipe_description: updatedRecipe.recipe_description,\n            instructions: updatedRecipe.instructions,\n            id: this.context.recipeDetails.recipe.id,\n            user_name: this.context.recipeDetails.recipe.user_name\n          },\n          updatedRecipe.ingredients,\n        ))\n      .then(res => {\n        // Dirty hack to make it update correctly\n        let that = this;\n        setTimeout(function() {\n          that.props.history.push(`/recipes/${recipeId}/`)}, 500)})\n      .catch(err => this.context.setError(err))\n  }\n\n\n  render() {\n    return (\n      <main role=\"main\" className='updateRecipe'>\n        <header>\n          <h2>Update Recipe</h2>\n        </header>\n        <section>\n          <form className='updateRecipeForm' onSubmit={this.onUpdateRecipe}>\n            <div className='flexContainer'>\n              <div className='leftColumn'>\n                <label htmlFor='recipe_title'>Title</label>\n                <input\n                  type='text' name='title' id='recipe_title'\n                  defaultValue={this.state.recipe.title.value}\n                  onChange={e => this.updateTitle(e.target.value)}\n                />\n                <label htmlFor='description'>Description</label>\n                <textarea\n                  name='recipe_description' id='recipe_description'\n                  defaultValue={this.state.recipe.recipe_description.value}\n                  onChange={e => this.updateDescription(e.target.value)}\n                />\n                <label htmlFor='instructions'>Cooking Directions</label>\n                <textarea\n                  id='instructions' name='instructions'\n                  defaultValue={this.state.recipe.instructions.value}\n                  onChange={e => this.updateInstructions(e.target.value)}\n                ></textarea>\n              </div>\n              <div className='rightColumn'>\n                {this.state.ingredients.values.map((ingredient, idx) =>\n                  <IngredientInput key={idx} idx={idx}\n                    data={ingredient} arrLength={this.state.ingredients.values.length}\n                    handleChange={this.updateIngredients} onClick={e => this.removeIngredients(idx)}\n                  />\n                )}\n                <button onClick={this.addIngredient}>+ Add another ingredient</button>\n              </div>\n            </div>\n            <input type='submit' />\n          </form>\n        </section>\n      </main>\n    )\n  }\n}","import config from '../config';\n\nconst AuthApiService = {\n  postLogin({ user_name, password }) {\n    return fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ user_name, password }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.json()\n      )\n  },\n\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/users`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.json()\n      )\n  },\n}\n\nexport default AuthApiService","import React, { Component } from 'react';\nimport AuthApiService from '../../services/auth-api-service';\nimport TokenService from '../../services/token-service';\nimport OnlyTastefulContext from '../../context/RecipesContext';\nimport './SignIn.css';\n\nexport default class SignIn extends Component {\n  state = {\n    error: null,\n  }\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n\n  static contextType = OnlyTastefulContext;\n\n  onSignIn = (e) => {\n    e.preventDefault()\n    const { user_name, password } = e.target\n\n    AuthApiService.postLogin({\n      user_name: user_name.value,\n      password: password.value\n    })\n      .then(res => {\n        this.setState({\n          error: null,\n        })\n        this.context.signIn(user_name.value)\n        TokenService.saveAuthToken(res.authToken)\n        this.props.history.push('/recipes')\n      })\n      .catch(res => this.setState({\n        error: res.error,\n      }))\n  }\n\n  render() {\n    return (\n      <main className='signIn'>\n        <header>\n          <h2>Sign In</h2>\n        </header>\n        <section>\n          { this.state.error && <div className='errorMsg'>{this.state.error}</div>}\n        <form onSubmit={this.onSignIn}>\n          <label htmlFor='signin_user_name'>Username</label>\n          <input type='text' name='user_name' id='signin_user_name' />\n          <label htmlFor='signin_password'>Password</label>\n          <input type='password' name='password' id='signin_password' />\n          <button type='submit'>Sign In</button>\n        </form>\n      </section>\n      </main>\n    )\n  }\n}","import React, { Component } from 'react';\nimport AuthApiService from '../../services/auth-api-service';\nimport TokenService from '../../services/token-service';\nimport OnlyTastefulContext from '../../context/RecipesContext';\nimport './SignUp.css';\n\nexport default class SignUp extends Component {\n  state = {\n    error: null,\n  }\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n\n  static contextType = OnlyTastefulContext;\n\n  onSignUp = (e) => {\n    e.preventDefault()\n    const { user_name, password, full_name } = e.target\n\n    AuthApiService.postUser({\n      user_name: user_name.value,\n      password: password.value,\n      full_name: full_name.value\n    })\n      .then(res => {\n        AuthApiService.postLogin({\n          user_name: user_name.value,\n          password: password.value\n        })\n          .then(res => {\n            this.setState({\n              error: null,\n            })\n            this.context.signUp(user_name.value)\n            TokenService.saveAuthToken(res.authToken)\n            this.props.history.push('/recipes')\n          })\n      }\n      )\n      .catch(res => this.setState({\n        error: res.error,\n      }))\n  }\n\n  render() {\n    return (\n      <main role='main' className='signUp'>\n        <header>\n          <h1>Sign Up</h1>\n        </header>\n        <section>\n          {this.state.error && <div className='errorMsg'>{this.state.error}</div>}\n          <form onSubmit={this.onSignUp}>\n            <label htmlFor='register_user_name'>Username</label>\n            <input type='text' name='user_name' id='register_user_name' />\n            <label htmlFor='register_password'>Password</label>\n            <input type='password' name='password' id='register_password' />\n            <label htmlFor='register_full_name'>Full Name</label>\n            <input type='text' name='full_name' id='register_full_name' />\n            <button type='submit'>Sign Up</button>\n          </form>\n        </section>\n      </main>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\n// Context\nimport { RecipesProvider } from './context/RecipesContext';\nimport './index.css';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <RecipesProvider>\n      <App />\n    </RecipesProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n// Components\nimport Nav from '../Nav/Nav';\nimport Landing from '../../routes/Landing/Landing';\nimport Footer from '../Footer/Footer';\n// Routes\nimport RecipeList from '../../routes/RecipeList/RecipeList';\nimport RecipeDetail from '../../routes/RecipeDetail/RecipeDetail';\nimport CreateRecipe from '../../routes/CreateRecipe/CreateRecipe';\nimport UpdateRecipe from '../../routes/UpdateRecipe/UpdateRecipe';\nimport SignIn from '../../routes/SignIn/SignIn';\nimport SignUp from '../../routes/SignUp/SignUp';\nimport './App.css';\n\n// TODO: Add form validation for signin\n// TODO: Add form validation for signup\n// TODO: Add form validation for create recipe\n// TODO: Add error boundary and tests\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Route exact path='/' component={Landing} />\n      <Route path='/signup' component={SignUp} />\n      <Route path='/signin' component={SignIn} />\n      <Route exact path='/recipes' component={RecipeList} />\n      <Route exact path='/recipes/:recipeId' component={RecipeDetail} />\n      <Route path='/createrecipe' component={CreateRecipe} />\n      <Route path='/recipes/:recipeId/update' component={UpdateRecipe} />\n      <Footer />\n    </div>\n  )\n}"],"sourceRoot":""}